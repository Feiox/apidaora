{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"apidaora HTTP/REST API using dataclasses and TypedDict annotation for python Documentation : https://dutradda.github.io/apidaora Source Code : https://github.com/dutradda/apidaora Key Features Declare request objects as @jsondaora (can be TypedDict or @dataclass): PathArgs for values on path Query for values on query string Headers for values on headers Body for values on body Declare response objects as @jsondaora (can be TypedDict or @dataclass): Headers for values on headers Body for values on body Requirements Python 3.7+ jsondaora for json validation/parsing orjson for json/bytes serialization (jsondaora dependency) Instalation $ pip install apidaora Basic example from typing import TypedDict from jsondaora import jsondaora from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyRequest ( Request ): class MyQuery ( TypedDict ): name : str query : MyQuery @jsondaora class MyResponse ( JSONResponse ): class MyResponseBody ( TypedDict ): message : str body : MyResponseBody def hello_controller ( req : MyRequest ) -> MyResponse : name = req . query [ 'name' ] body = MyResponse . MyResponseBody ( message = f 'Hello {name}!' ) return MyResponse ( body = body ) app = asgi_app ([ Route ( '/hello' , MethodType . GET , hello_controller )]) Running the server (needs uvicorn installed ): uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server (needs curl installed ): curl -i localhost:8000/hello?name = World HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 26 {\"message\":\"Hello World!\"} Example for complete request/response from typing import TypedDict from jsondaora import integer , jsondaora , string from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyHeaders ( TypedDict ): x_req_id : str @jsondaora class MyRequest ( Request ): class MyPathArgs ( TypedDict ): name : str class MyQuery ( TypedDict ): location : str class MyBody ( TypedDict ): last_name : str age : int path_args : MyPathArgs query : MyQuery headers : MyHeaders body : MyBody @jsondaora class MyResponse ( JSONResponse ): class You : name : str last_name : str location : string ( max_length = 100 ) age : integer ( minimum = 18 ) class MyResponseBody ( TypedDict ): hello_message : str about_you : 'MyResponse.You' body : MyResponseBody headers : MyHeaders def hello_controller ( req : MyRequest ) -> MyResponse : body = MyResponse . MyResponseBody ( hello_message = hello_message ( req . path_args [ 'name' ], req . query [ 'location' ] ), about_you = MyResponse . You ( name = req . path_args [ 'name' ], last_name = req . body [ 'last_name' ], location = req . query [ 'location' ], age = req . body [ 'age' ], ), ) headers = MyHeaders ( x_req_id = req . headers [ 'x_req_id' ]) return MyResponse ( body = body , headers = headers ) def hello_message ( name : str , location : str ) -> str : return f 'Hello {name}! Welcome to {location}!' app = asgi_app ([ Route ( '/hello/{name}' , MethodType . PUT , hello_controller )]) Running the server: uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server: curl -i -X PUT localhost:8000/hello/Me?location = World \\ -H 'x-req-id: 1a2b3c4d5e6f7g8h' \\ -d '{\"last_name\":\"My Self\",\"age\":32}' HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn x-req-id: 1a2b3c4d5e6f7g8h content-type: application/json content-length: 123 {\"hello_message\":\"Hello Me! Welcome to World!\",\"about_you\":{\"name\":\"Me\",\"last_name\":\"My Self\",\"location\":\"World\",\"age\":32}}","title":"apidaora"},{"location":"#apidaora","text":"HTTP/REST API using dataclasses and TypedDict annotation for python Documentation : https://dutradda.github.io/apidaora Source Code : https://github.com/dutradda/apidaora","title":"apidaora"},{"location":"#key-features","text":"Declare request objects as @jsondaora (can be TypedDict or @dataclass): PathArgs for values on path Query for values on query string Headers for values on headers Body for values on body Declare response objects as @jsondaora (can be TypedDict or @dataclass): Headers for values on headers Body for values on body","title":"Key Features"},{"location":"#requirements","text":"Python 3.7+ jsondaora for json validation/parsing orjson for json/bytes serialization (jsondaora dependency)","title":"Requirements"},{"location":"#instalation","text":"$ pip install apidaora","title":"Instalation"},{"location":"#basic-example","text":"from typing import TypedDict from jsondaora import jsondaora from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyRequest ( Request ): class MyQuery ( TypedDict ): name : str query : MyQuery @jsondaora class MyResponse ( JSONResponse ): class MyResponseBody ( TypedDict ): message : str body : MyResponseBody def hello_controller ( req : MyRequest ) -> MyResponse : name = req . query [ 'name' ] body = MyResponse . MyResponseBody ( message = f 'Hello {name}!' ) return MyResponse ( body = body ) app = asgi_app ([ Route ( '/hello' , MethodType . GET , hello_controller )]) Running the server (needs uvicorn installed ): uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server (needs curl installed ): curl -i localhost:8000/hello?name = World HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 26 {\"message\":\"Hello World!\"}","title":"Basic example"},{"location":"#example-for-complete-requestresponse","text":"from typing import TypedDict from jsondaora import integer , jsondaora , string from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyHeaders ( TypedDict ): x_req_id : str @jsondaora class MyRequest ( Request ): class MyPathArgs ( TypedDict ): name : str class MyQuery ( TypedDict ): location : str class MyBody ( TypedDict ): last_name : str age : int path_args : MyPathArgs query : MyQuery headers : MyHeaders body : MyBody @jsondaora class MyResponse ( JSONResponse ): class You : name : str last_name : str location : string ( max_length = 100 ) age : integer ( minimum = 18 ) class MyResponseBody ( TypedDict ): hello_message : str about_you : 'MyResponse.You' body : MyResponseBody headers : MyHeaders def hello_controller ( req : MyRequest ) -> MyResponse : body = MyResponse . MyResponseBody ( hello_message = hello_message ( req . path_args [ 'name' ], req . query [ 'location' ] ), about_you = MyResponse . You ( name = req . path_args [ 'name' ], last_name = req . body [ 'last_name' ], location = req . query [ 'location' ], age = req . body [ 'age' ], ), ) headers = MyHeaders ( x_req_id = req . headers [ 'x_req_id' ]) return MyResponse ( body = body , headers = headers ) def hello_message ( name : str , location : str ) -> str : return f 'Hello {name}! Welcome to {location}!' app = asgi_app ([ Route ( '/hello/{name}' , MethodType . PUT , hello_controller )]) Running the server: uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server: curl -i -X PUT localhost:8000/hello/Me?location = World \\ -H 'x-req-id: 1a2b3c4d5e6f7g8h' \\ -d '{\"last_name\":\"My Self\",\"age\":32}' HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn x-req-id: 1a2b3c4d5e6f7g8h content-type: application/json content-length: 123 {\"hello_message\":\"Hello Me! Welcome to World!\",\"about_you\":{\"name\":\"Me\",\"last_name\":\"My Self\",\"location\":\"World\",\"age\":32}}","title":"Example for complete request/response"},{"location":"changelog/","text":"0.5.1 (2019-09-21) Improve docs 0.5.0 (2019-09-20) Improves requests/responses objects 0.4.1 (2019-09-19) Improve docs 0.4.0 (2019-09-19) Rename typingjson project do jsondaora 0.3.0 (2019-09-19) Add TypedDict support Rename project 0.2.0 (2019-09-18) Refactor app and router modules 0.1.2 (2019-09-18) Improve docs 0.1.1 (2019-09-18) Fix docs 0.1.0 (2019-09-18) Add initial files","title":"Changelog"},{"location":"changelog/#051-2019-09-21","text":"Improve docs","title":"0.5.1 (2019-09-21)"},{"location":"changelog/#050-2019-09-20","text":"Improves requests/responses objects","title":"0.5.0 (2019-09-20)"},{"location":"changelog/#041-2019-09-19","text":"Improve docs","title":"0.4.1 (2019-09-19)"},{"location":"changelog/#040-2019-09-19","text":"Rename typingjson project do jsondaora","title":"0.4.0 (2019-09-19)"},{"location":"changelog/#030-2019-09-19","text":"Add TypedDict support Rename project","title":"0.3.0 (2019-09-19)"},{"location":"changelog/#020-2019-09-18","text":"Refactor app and router modules","title":"0.2.0 (2019-09-18)"},{"location":"changelog/#012-2019-09-18","text":"Improve docs","title":"0.1.2 (2019-09-18)"},{"location":"changelog/#011-2019-09-18","text":"Fix docs","title":"0.1.1 (2019-09-18)"},{"location":"changelog/#010-2019-09-18","text":"Add initial files","title":"0.1.0 (2019-09-18)"},{"location":"features/","text":"apidaora features apidaora gives you the following: Same interface as dataclasses module, plus extensions","title":"Features"},{"location":"features/#apidaora-features","text":"apidaora gives you the following:","title":"apidaora features"},{"location":"features/#same-interface-as-dataclasses-module-plus-extensions","text":"","title":"Same interface as dataclasses module, plus extensions"},{"location":"json/","text":"JavaScript Object Notation Introduction from w3schools : - https://www.w3schools.com/js/js_json_intro.asp JSON Schema Official Documentation: - https://json-schema.org","title":"Json"},{"location":"json/#javascript-object-notation","text":"Introduction from w3schools : - https://www.w3schools.com/js/js_json_intro.asp","title":"JavaScript Object Notation"},{"location":"json/#json-schema","text":"Official Documentation: - https://json-schema.org","title":"JSON Schema"},{"location":"python-dataclass/","text":"Python 3.7 dataclasses module Official Documentation: - https://docs.python.org/3/library/dataclasses.html Dataclass Benchmark Data types performance comparision: - https://medium.com/@jacktator/dataclass-vs-namedtuple-vs-object-for-performance-optimization-in-python-691e234253b9","title":"Python dataclass intro"},{"location":"python-dataclass/#python-37-dataclasses-module","text":"Official Documentation: - https://docs.python.org/3/library/dataclasses.html","title":"Python 3.7 dataclasses module"},{"location":"python-dataclass/#dataclass-benchmark","text":"Data types performance comparision: - https://medium.com/@jacktator/dataclass-vs-namedtuple-vs-object-for-performance-optimization-in-python-691e234253b9","title":"Dataclass Benchmark"},{"location":"tutorial/00-intro/","text":"Tutorial - Introduction Getting Started Installs $ pip install apidaora Starts coding from typing import TypedDict from jsondaora import jsondaora from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyRequest ( Request ): class MyQuery ( TypedDict ): name : str query : MyQuery @jsondaora class MyResponse ( JSONResponse ): class MyResponseBody ( TypedDict ): message : str body : MyResponseBody def hello_controller ( req : MyRequest ) -> MyResponse : name = req . query [ 'name' ] body = MyResponse . MyResponseBody ( message = f 'Hello {name}!' ) return MyResponse ( body = body ) app = asgi_app ([ Route ( '/hello' , MethodType . GET , hello_controller )]) Running the server (needs uvicorn installed ): uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server (needs curl installed ): curl -i localhost:8000/hello?name = World HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 26 {\"message\":\"Hello World!\"}","title":"Introduction"},{"location":"tutorial/00-intro/#tutorial-introduction","text":"","title":"Tutorial - Introduction"},{"location":"tutorial/00-intro/#getting-started","text":"","title":"Getting Started"},{"location":"tutorial/00-intro/#installs","text":"$ pip install apidaora","title":"Installs"},{"location":"tutorial/00-intro/#starts-coding","text":"from typing import TypedDict from jsondaora import jsondaora from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyRequest ( Request ): class MyQuery ( TypedDict ): name : str query : MyQuery @jsondaora class MyResponse ( JSONResponse ): class MyResponseBody ( TypedDict ): message : str body : MyResponseBody def hello_controller ( req : MyRequest ) -> MyResponse : name = req . query [ 'name' ] body = MyResponse . MyResponseBody ( message = f 'Hello {name}!' ) return MyResponse ( body = body ) app = asgi_app ([ Route ( '/hello' , MethodType . GET , hello_controller )]) Running the server (needs uvicorn installed ): uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server (needs curl installed ): curl -i localhost:8000/hello?name = World HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 26 {\"message\":\"Hello World!\"}","title":"Starts coding"},{"location":"tutorial/01-complete-request-response/","text":"Tutorial - Complete Request/Response Example from typing import TypedDict from jsondaora import integer , jsondaora , string from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyHeaders ( TypedDict ): x_req_id : str @jsondaora class MyRequest ( Request ): class MyPathArgs ( TypedDict ): name : str class MyQuery ( TypedDict ): location : str class MyBody ( TypedDict ): last_name : str age : int path_args : MyPathArgs query : MyQuery headers : MyHeaders body : MyBody @jsondaora class MyResponse ( JSONResponse ): class You : name : str last_name : str location : string ( max_length = 100 ) age : integer ( minimum = 18 ) class MyResponseBody ( TypedDict ): hello_message : str about_you : 'MyResponse.You' body : MyResponseBody headers : MyHeaders def hello_controller ( req : MyRequest ) -> MyResponse : body = MyResponse . MyResponseBody ( hello_message = hello_message ( req . path_args [ 'name' ], req . query [ 'location' ] ), about_you = MyResponse . You ( name = req . path_args [ 'name' ], last_name = req . body [ 'last_name' ], location = req . query [ 'location' ], age = req . body [ 'age' ], ), ) headers = MyHeaders ( x_req_id = req . headers [ 'x_req_id' ]) return MyResponse ( body = body , headers = headers ) def hello_message ( name : str , location : str ) -> str : return f 'Hello {name}! Welcome to {location}!' app = asgi_app ([ Route ( '/hello/{name}' , MethodType . PUT , hello_controller )]) Running the server (needs uvicorn installed ): uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server (needs curl installed ): curl -i -X PUT localhost:8000/hello/Me?location = World \\ -H 'x-req-id: 1a2b3c4d5e6f7g8h' \\ -d '{\"last_name\":\"My Self\",\"age\":32}' HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn x-req-id: 1a2b3c4d5e6f7g8h content-type: application/json content-length: 123 {\"hello_message\":\"Hello Me! Welcome to World!\",\"about_you\":{\"name\":\"Me\",\"last_name\":\"My Self\",\"location\":\"World\",\"age\":32}}","title":"Complete Request/Response"},{"location":"tutorial/01-complete-request-response/#tutorial-complete-requestresponse","text":"","title":"Tutorial - Complete Request/Response"},{"location":"tutorial/01-complete-request-response/#example","text":"from typing import TypedDict from jsondaora import integer , jsondaora , string from apidaora import JSONResponse , MethodType from apidaora.core.app import asgi_app from apidaora.core.request import Request from apidaora.core.router import Route @jsondaora class MyHeaders ( TypedDict ): x_req_id : str @jsondaora class MyRequest ( Request ): class MyPathArgs ( TypedDict ): name : str class MyQuery ( TypedDict ): location : str class MyBody ( TypedDict ): last_name : str age : int path_args : MyPathArgs query : MyQuery headers : MyHeaders body : MyBody @jsondaora class MyResponse ( JSONResponse ): class You : name : str last_name : str location : string ( max_length = 100 ) age : integer ( minimum = 18 ) class MyResponseBody ( TypedDict ): hello_message : str about_you : 'MyResponse.You' body : MyResponseBody headers : MyHeaders def hello_controller ( req : MyRequest ) -> MyResponse : body = MyResponse . MyResponseBody ( hello_message = hello_message ( req . path_args [ 'name' ], req . query [ 'location' ] ), about_you = MyResponse . You ( name = req . path_args [ 'name' ], last_name = req . body [ 'last_name' ], location = req . query [ 'location' ], age = req . body [ 'age' ], ), ) headers = MyHeaders ( x_req_id = req . headers [ 'x_req_id' ]) return MyResponse ( body = body , headers = headers ) def hello_message ( name : str , location : str ) -> str : return f 'Hello {name}! Welcome to {location}!' app = asgi_app ([ Route ( '/hello/{name}' , MethodType . PUT , hello_controller )]) Running the server (needs uvicorn installed ): uvicorn myapp:app INFO: Started server process [16220] INFO: Waiting for application startup. INFO: ASGI 'lifespan' protocol appears unsupported. INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Quering the server (needs curl installed ): curl -i -X PUT localhost:8000/hello/Me?location = World \\ -H 'x-req-id: 1a2b3c4d5e6f7g8h' \\ -d '{\"last_name\":\"My Self\",\"age\":32}' HTTP/1.1 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn x-req-id: 1a2b3c4d5e6f7g8h content-type: application/json content-length: 123 {\"hello_message\":\"Hello Me! Welcome to World!\",\"about_you\":{\"name\":\"Me\",\"last_name\":\"My Self\",\"location\":\"World\",\"age\":32}}","title":"Example"}]}